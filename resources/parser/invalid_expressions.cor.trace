L1: 0000 Nil
    0001 IncGlobalCount
L2: 0002 Int(0) -> 1
    0003 OpAdd
    0004 StoreGlobal(0, false) -> x
    0005 Pop
    0006 UnarySub
L3: 0007 StoreGlobal(0, false) -> x
    0008 Pop
    0009 NativeFunction(Print)
    0010 OpFuncCompose
L4: 0011 StoreGlobal(0, false) -> x
    0012 Pop
    0013 NativeFunction(Print)
    0014 StoreGlobal(0, false) -> x
    0015 Pop
L5: 0016 NativeFunction(Print)
    0017 Int(1) -> 4
    0018 OpFuncEval(2)
    0019 StoreGlobal(0, false) -> x
L6: 0020 Pop
    0021 NativeFunction(Print)
    0022 Int(2) -> 5
    0023 OpFuncEval(1)
    0024 StoreGlobal(0, false) -> x
    0025 Pop
L7: 0026 Pop
    0027 Exit
Expected an expression terminal, got '+' token instead
  at: line 2 (invalid_expressions.cor)
  at:

{ x = 1 + + 3 }

Expected an expression terminal, got '+' token instead
  at: line 3 (invalid_expressions.cor)
  at:

{ x = - + 2 }

Expected an expression terminal, got '.' token instead
  at: line 4 (invalid_expressions.cor)
  at:

{ x = print .. 3 }

Expecting a statement, got integer '3' instead
  at: line 5 (invalid_expressions.cor)
  at:

{ x = print 3 }

Expected an expression terminal, got ',' token instead
  at: line 6 (invalid_expressions.cor)
  at:

{ x = print (4 ,, 5) }

Expected a ',' or ')' after function invocation, got integer '6' instead
  at: line 7 (invalid_expressions.cor)
  at:

{ x = print (5 6) }
