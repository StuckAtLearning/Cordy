L1: 0000 IncGlobalCount
    0001 Nil
L2: 0002 Int(1) -> 1
    0003 OpAdd
    0004 StoreGlobal(0, false) -> x
    0005 Pop
    0006 UnarySub
L3: 0007 StoreGlobal(0, false) -> x
    0008 Pop
    0009 NativeFunction(Print)
    0010 Swap
L4: 0011 OpFuncEval(1)
    0012 StoreGlobal(0, false) -> x
    0013 Pop
    0014 NativeFunction(Print)
    0015 StoreGlobal(0, false) -> x
    0016 Pop
L5: 0017 NativeFunction(Print)
    0018 Int(2) -> 4
    0019 OpFuncEval(2)
    0020 StoreGlobal(0, false) -> x
L6: 0021 Pop
    0022 NativeFunction(Print)
    0023 Int(3) -> 5
    0024 OpFuncEval(1)
    0025 StoreGlobal(0, false) -> x
    0026 Pop
L7: 0027 Pop
    0028 Exit
Expected an expression terminal, got '+' token instead
  at: line 2 (invalid_expressions.cor)
  at:

{ x = 1 + + 3 }

Expected an expression terminal, got '+' token instead
  at: line 3 (invalid_expressions.cor)
  at:

{ x = - + 2 }

Expected an expression terminal, got '.' token instead
  at: line 4 (invalid_expressions.cor)
  at:

{ x = print .. 3 }

Expecting a statement, got integer '3' instead
  at: line 5 (invalid_expressions.cor)
  at:

{ x = print 3 }

Expected an expression terminal, got ',' token instead
  at: line 6 (invalid_expressions.cor)
  at:

{ x = print (4 ,, 5) }

Expected a ',' or ')' after function invocation, got integer '6' instead
  at: line 7 (invalid_expressions.cor)
  at:

{ x = print (5 6) }
