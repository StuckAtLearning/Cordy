L1: 0000 Nil
L2: 0001 Int(0) -> 1
    0002 Nil
    0003 OpAdd
    0004 StoreGlobal(0) -> x
    0005 Pop
    0006 Nil
L3: 0007 UnarySub
    0008 StoreGlobal(0) -> x
    0009 Pop
    0010 Bound(Print)
    0011 Nil
L4: 0012 OpFuncCompose
    0013 StoreGlobal(0) -> x
    0014 Pop
    0015 Bound(Print)
    0016 StoreGlobal(0) -> x
    0017 Pop
L5: 0018 Bound(Print)
    0019 Int(1) -> 4
    0020 Nil
    0021 OpFuncEval(2)
L6: 0022 StoreGlobal(0) -> x
    0023 Pop
    0024 Bound(Print)
    0025 Int(2) -> 5
    0026 OpFuncEval(1)
    0027 StoreGlobal(0) -> x
    0028 Pop
L7: 0029 Pop
    0030 Exit
Expected an expression terminal, got '+' token instead
  at: line 2 (invalid_expressions.cor)
  at:

{ x = 1 + + 3 }

Expected an expression terminal, got '+' token instead
  at: line 3 (invalid_expressions.cor)
  at:

{ x = - + 2 }

Expected an expression terminal, got '.' token instead
  at: line 4 (invalid_expressions.cor)
  at:

{ x = print .. 3 }

Expecting a statement, got integer '3' instead
  at: line 5 (invalid_expressions.cor)
  at:

{ x = print 3 }

Expected an expression terminal, got ',' token instead
  at: line 6 (invalid_expressions.cor)
  at:

{ x = print (4 ,, 5) }

Expected a ',' or ')' after function invocation, got integer '6' instead
  at: line 7 (invalid_expressions.cor)
  at:

{ x = print (5 6) }
